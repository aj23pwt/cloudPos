ALTER table pos_res modify column type1 varchar(100) ;
ALTER table pos_res modify column type2 varchar(100) ;
ALTER table pos_res modify column type3 varchar(100) ;
ALTER table pos_res modify column type4 varchar(100) ;
ALTER table pos_res modify column type5 varchar(100) ;
ALTER table pos_res modify column market varchar(10) ;
ALTER table pos_res modify column source varchar(10) ;
ALTER table pos_pay modify column foliono varchar(60) ;
ALTER table pos_master modify column type1 varchar(100) ;
ALTER table pos_master modify column type2 varchar(100) ;
ALTER table pos_master modify column type3 varchar(100) ;
ALTER table pos_master modify column type4 varchar(100) ;
ALTER table pos_master modify column type5 varchar(100) ;
ALTER table pos_master modify column market varchar(10) ;
ALTER table pos_master modify column source varchar(10) ;
ALTER table pos_master modify column empid varchar(100) ;
ALTER table pos_master_history modify column type1 varchar(100) ;
ALTER table pos_master_history modify column type2 varchar(100) ;
ALTER table pos_master_history modify column type3 varchar(100) ;
ALTER table pos_master_history modify column type4 varchar(100) ;
ALTER table pos_master_history modify column type5 varchar(100) ;
ALTER table pos_master_history modify column market varchar(10) ;
ALTER table pos_master_history modify column source varchar(10) ;
ALTER table pos_master_history modify column empid varchar(100) ;
ALTER table pos_account modify column empid varchar(100) ;
ALTER table pos_account_history modify column empid varchar(100) ;
ALTER table pos_detail modify column empid varchar(100) ;
ALTER table pos_detail_history modify column empid varchar(100) ;

-- 修改账号 长度
ALTER table pos_accnt_sync modify column accnt varchar(20) ;
ALTER table pos_account modify column accnt varchar(20) ;
ALTER table pos_account modify column billno varchar(20) ;
ALTER table pos_account_history modify column accnt varchar(20) ;
ALTER table pos_account_history modify column billno varchar(20) ;
ALTER table pos_audit_master modify column accnt varchar(20) ;
ALTER table pos_audit_report modify column accnt varchar(20) ;
ALTER table pos_detail modify column accnt varchar(20) ;
ALTER table pos_detail modify column billno varchar(20) ;
ALTER table pos_detail_history modify column accnt varchar(20) ;
ALTER table pos_detail_history modify column billno varchar(20) ;
ALTER table pos_detail_dai modify column accnt varchar(20) ;
ALTER table pos_detail_jie modify column accnt varchar(20) ;

ALTER table pos_dishcard modify column accnt varchar(20) ;
ALTER table pos_dishcard modify column foliono varchar(20) ;
ALTER table pos_dishcard_history modify column accnt varchar(20) ;
ALTER table pos_dishcard_history modify column foliono varchar(20) ;
ALTER table pos_drinks_consume_history modify column accnt varchar(20) ;

ALTER table pos_master modify column accnt varchar(20) ;
ALTER table pos_master modify column billno varchar(20) ;
ALTER table pos_master modify column pcrec varchar(20) ;
ALTER table pos_master modify column resno varchar(20) ;
ALTER table pos_master modify column toaccnt varchar(20) ;
ALTER table pos_master_history modify column accnt varchar(20) ;
ALTER table pos_master_history modify column billno varchar(20) ;
ALTER table pos_master_history modify column pcrec varchar(20) ;
ALTER table pos_master_history modify column resno varchar(20) ;
ALTER table pos_master_history modify column toaccnt varchar(20) ;

ALTER table pos_order modify column accnt varchar(20) ;
ALTER table pos_pay modify column accnt varchar(20) ;
ALTER table pos_pay modify column taccnt varchar(20) ;
ALTER table pos_pay modify column billno varchar(20) ;
ALTER table pos_res modify column accnt varchar(20) ;
ALTER table pos_res modify column toaccnt varchar(20) ;
ALTER table pos_res_order modify column accnt varchar(20) ;


ALTER table pos_table_map modify column accnt varchar(20) ;
ALTER table pos_table_map modify column pcrec varchar(20) ;

ALTER table pos_pccode modify column dec_mode varchar(10) ;
ALTER table pos_pccode modify column exp1 varchar(60) ;
ALTER table pos_pccode modify column exp2 varchar(60) ;
ALTER table pos_pccode modify column exp3 varchar(60) ;
ALTER table pos_pccode modify column exp4 varchar(60) ;

ALTER table pos_account modify column bank varchar(20) ;
ALTER table pos_account_history modify column bank varchar(20) ;

-- 新加吧台关联比例，默认为1
-- ALTER table pos_store_plu_article add column rate DECIMAL(10,2) DEFAULT 1 AFTER art_name; 
-- 修改work_station中mac字段长度
ALTER TABLE work_station CHANGE mac mac VARCHAR(255) CHARSET utf8 COLLATE utf8_general_ci DEFAULT '' NOT NULL;
-- ALTER TABLE hotel ADD COLUMN server_name VARCHAR(50) NULL AFTER client_type, ADD COLUMN area1 VARCHAR(50) NULL AFTER server_name, ADD COLUMN area2 VARCHAR(50) NULL AFTER area1;
-- ALTER table hotel ADD COLUMN client_version varchar(10) DEFAULT ''; 
alter table bill_scene_link ADD COLUMN copies int(11) DEFAULT 1;
alter table report_center ADD COLUMN count_sql text ;
ALTER TABLE pos_account MODIFY COLUMN bank VARCHAR(20);
ALTER TABLE pos_account_history MODIFY COLUMN bank VARCHAR(20);
-- 新增站点管辖营业点关账记录表
DROP TABLE IF EXISTS `pos_pccode_audit_flag`;
CREATE TABLE `pos_pccode_audit_flag` (
  `hotel_group_id` bigint(16) NOT NULL,
  `hotel_id` bigint(16) NOT NULL,
  `id` bigint(16) NOT NULL AUTO_INCREMENT,
  `pos_pccode` varchar(20) NOT NULL DEFAULT '',
  `pos_pccode_descript` varchar(60) DEFAULT '',
  `biz_date` datetime NOT NULL,
  `biz_date1` datetime NOT NULL,
  `is_audit` char(2) NOT NULL DEFAULT 'F' COMMENT 'T/F',
  `audit_user` varchar(20) NOT NULL DEFAULT '',
  `station_audit` varchar(20) NOT NULL DEFAULT '',
  `is_rmposted` char(2) DEFAULT 'F' COMMENT 'T/F',
  `station_rmcheck` varchar(20) DEFAULT '',
  `station_rmpost` varchar(20) DEFAULT '',
  `is_exclude_part` char(2) DEFAULT 'F' COMMENT 'T/F',
  `station_exclude_part` varchar(20) DEFAULT '',
  `is_can_checkout` char(2) DEFAULT 'T' COMMENT 'T/F',
  `is_keypart` char(2) DEFAULT 'F' COMMENT 'T/F',
  `is_year_first_day` char(2) DEFAULT 'F' COMMENT 'T/F',
  `is_month_first_day` char(2) DEFAULT 'F' COMMENT 'T/F',
  `is_report_done` char(2) DEFAULT 'T' COMMENT 'T/F',
  `create_user` varchar(20) DEFAULT NULL,
  `create_datetime` datetime NOT NULL,
  `modify_user` varchar(20) NOT NULL,
  `modify_datetime` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `hotel_group_id` (`hotel_group_id`,`hotel_id`,`pos_pccode`,`biz_date`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

-- 新增张基础数据备份表
DROP TABLE IF EXISTS `pos_master_back`;
CREATE TABLE `pos_master_back` (
  `hotel_group_id` BIGINT(16) NOT NULL,
  `hotel_id` BIGINT(16) NOT NULL,
  `id` BIGINT(16) NOT NULL,
  `accnt` VARCHAR(20) DEFAULT NULL,
  `type1` VARCHAR(100) DEFAULT NULL,
  `type2` VARCHAR(100) DEFAULT NULL,
  `type3` VARCHAR(100) DEFAULT NULL,
  `type4` VARCHAR(100) DEFAULT NULL,
  `type5` VARCHAR(6) DEFAULT '' COMMENT '客人类别5',
  `pccode` VARCHAR(10) NOT NULL DEFAULT '' COMMENT '营业点代码 ',
  `mode` VARCHAR(10) DEFAULT '' COMMENT '模式代码 ',
  `shift` CHAR(1) NOT NULL DEFAULT '' COMMENT '班别',
  `empid` VARCHAR(100) DEFAULT '' COMMENT '工号',
  `sta` CHAR(1) NOT NULL DEFAULT '' COMMENT '状态',
  `osta` CHAR(1) DEFAULT '' COMMENT ' 上次状态',
  `biz_date` DATETIME NOT NULL COMMENT '营业日期',
  `tableno` VARCHAR(10) DEFAULT '' COMMENT '-桌号',
  `exttableno` VARCHAR(100) DEFAULT '' COMMENT '扩展桌号等',
  `gsts` INT(11) NOT NULL DEFAULT '0' COMMENT ' 客人数 ',
  `children` INT(11) DEFAULT '0' COMMENT '儿童数',
  `phone` VARCHAR(13) DEFAULT NULL,
  `market` VARCHAR(10) DEFAULT NULL,
  `source` VARCHAR(10) DEFAULT NULL,
  `haccnt` VARCHAR(10) DEFAULT '' COMMENT ' 关联客户档案号',
  `name` VARCHAR(80) DEFAULT '' COMMENT '关联客人姓名',
  `cusno` VARCHAR(10) DEFAULT '' COMMENT '协议单位号',
  `cusinfo` VARCHAR(60) DEFAULT '' COMMENT ' 协议单位名称',
  `cardno` VARCHAR(20) DEFAULT '' COMMENT ' 贵宾卡号',
  `cardinfo` VARCHAR(60) DEFAULT '' COMMENT ' 贵宾卡名称',
  `saleid` VARCHAR(10) DEFAULT '' COMMENT '销售代码',
  `saleinfo` VARCHAR(60) DEFAULT '' COMMENT '销售员信息',
  `dsc` DECIMAL(12,2) DEFAULT '0.00' COMMENT ' 折扣比率',
  `reason` VARCHAR(3) DEFAULT '' COMMENT ' 折扣理由',
  `srv` DECIMAL(12,2) DEFAULT '0.00' COMMENT ' 服务费比率',
  `tax` DECIMAL(12,2) DEFAULT '0.00' COMMENT '税额',
  `dscamount` DECIMAL(12,2) DEFAULT '0.00',
  `srvamount` DECIMAL(12,2) DEFAULT '0.00',
  `taxamount` DECIMAL(12,2) DEFAULT '0.00',
  `amount` DECIMAL(12,2) DEFAULT '0.00' COMMENT '菜品金额',
  `amount1` DECIMAL(12,2) DEFAULT '0.00' COMMENT '菜品分摊额',
  `amount2` DECIMAL(12,2) DEFAULT '0.00' COMMENT '菜品折扣分摊额',
  `amount3` DECIMAL(12,2) DEFAULT '0.00' COMMENT '菜品服务费分摊额',
  `amount4` DECIMAL(12,2) DEFAULT '0.00',
  `amount5` DECIMAL(12,2) DEFAULT '0.00',
  `maxamount` DECIMAL(12,2) DEFAULT '0.00' COMMENT '上次打印总金额',
  `charge` DECIMAL(12,2) DEFAULT '0.00',
  `credit` DECIMAL(12,2) DEFAULT '0.00',
  `bal` DECIMAL(12,2) DEFAULT '0.00',
  `billno` VARCHAR(20) DEFAULT NULL,
  `paycode` VARCHAR(6) DEFAULT '' COMMENT '付款代码 9001 或9001* 等',
  `extra` VARCHAR(30) DEFAULT '',
  `lastnum` INT(11) DEFAULT '0' COMMENT '记录明细行数',
  `lastrnum` INT(11) DEFAULT '0' COMMENT '记录打印行数',
  `lastpnum` INT(11) DEFAULT '0' COMMENT '记录打印页数 ',
  `pcrec` VARCHAR(20) DEFAULT NULL,
  `cmscode` VARCHAR(10) DEFAULT '' COMMENT '佣金代码',
  `receipt_no` VARCHAR(50) DEFAULT NULL,
  `receipt_amount` DECIMAL(12,2) DEFAULT NULL,
  `info` VARCHAR(200) DEFAULT '' COMMENT '主单备注信息',
  `toaccnt` VARCHAR(20) DEFAULT NULL,
  `accntinfo` VARCHAR(60) DEFAULT '' COMMENT '挂账单位信息',
  `resno` VARCHAR(20) DEFAULT NULL,
  `qr_code` VARCHAR(512) DEFAULT '' COMMENT '二维码',
  `create_user` VARCHAR(20) NOT NULL,
  `create_datetime` DATETIME NOT NULL,
  `modify_user` VARCHAR(20) NOT NULL,
  `modify_datetime` DATETIME NOT NULL,
  KEY `hotel_group_id_2` (`hotel_group_id`,`hotel_id`,`accnt`,`biz_date`),
  KEY `hotel_group_id_3` (`hotel_group_id`,`hotel_id`,`sta`,`biz_date`),
  KEY `hotel_group_id_4` (`hotel_group_id`,`hotel_id`,`biz_date`)
) ENGINE=INNODB DEFAULT CHARSET=utf8 COMMENT='餐饮主单表';

DROP TABLE IF EXISTS `pos_account_back`;
CREATE TABLE `pos_account_back` (
  `hotel_group_id` BIGINT(16) NOT NULL,
  `hotel_id` BIGINT(16) NOT NULL,
  `id` BIGINT(16) NOT NULL,
  `accnt` VARCHAR(20) DEFAULT NULL,
  `number` INT(11) DEFAULT '1' COMMENT '1表示消费，2表示付款',
  `inumber` INT(11) DEFAULT '1' COMMENT '序号',
  `subid` INT(11) DEFAULT '0',
  `shift` CHAR(1) DEFAULT '' COMMENT '班次',
  `pccode` VARCHAR(10) DEFAULT NULL COMMENT '营业点',
  `tableno` VARCHAR(10) DEFAULT NULL COMMENT '桌号',
  `empid` VARCHAR(100) DEFAULT '' COMMENT '工号',
  `biz_date` DATETIME DEFAULT NULL COMMENT '营业日期',
  `logdate` DATETIME DEFAULT NULL COMMENT '物理日期',
  `paycode` VARCHAR(5) NOT NULL DEFAULT '' COMMENT ' 付款代码',
  `descript` VARCHAR(80) DEFAULT '' COMMENT ' 付款名称',
  `descript_en` VARCHAR(80) DEFAULT NULL COMMENT ' 英文名',
  `amount` DECIMAL(12,2) DEFAULT '0.00',
  `credit` DECIMAL(12,2) NOT NULL DEFAULT '0.00',
  `bal` DECIMAL(12,2) DEFAULT '0.00',
  `billno` VARCHAR(20) DEFAULT NULL,
  `foliono` VARCHAR(20) DEFAULT '',
  `orderno` VARCHAR(20) DEFAULT '',
  `sign` VARCHAR(20) DEFAULT '00000000000000000000',
  `flag` VARCHAR(20) DEFAULT '',
  `sta` CHAR(1) NOT NULL DEFAULT '',
  `reason` CHAR(3) DEFAULT '',
  `info1` VARCHAR(50) DEFAULT '',
  `info2` VARCHAR(50) DEFAULT '',
  `bank` VARCHAR(20) DEFAULT NULL,
  `cardno` VARCHAR(20) DEFAULT '' COMMENT '银行卡号、会员卡号',
  `dtl_accnt` VARCHAR(20) DEFAULT '',
  `create_user` VARCHAR(20) NOT NULL,
  `create_datetime` DATETIME NOT NULL,
  `modify_user` VARCHAR(20) NOT NULL,
  `modify_datetime` DATETIME NOT NULL,
  KEY `hotel_group_id` (`hotel_group_id`,`hotel_id`,`accnt`),
  KEY `hotel_group_id_2` (`hotel_group_id`,`hotel_id`,`accnt`,`pccode`),
  KEY `hotel_group_id_3` (`hotel_group_id`,`hotel_id`,`accnt`,`shift`,`pccode`,`tableno`,`biz_date`),
  KEY `hotel_group_id_4` (`hotel_group_id`,`hotel_id`,`biz_date`,`sta`)
) ENGINE=INNODB DEFAULT CHARSET=utf8 COMMENT='餐饮账务表';

DROP TABLE IF EXISTS `pos_detail_back`;
CREATE TABLE `pos_detail_back` (
  `hotel_group_id` BIGINT(16) NOT NULL,
  `hotel_id` BIGINT(16) NOT NULL,
  `id` BIGINT(16) NOT NULL,
  `accnt` VARCHAR(20) DEFAULT NULL,
  `inumber` INT(11) DEFAULT '0' COMMENT '序号',
  `tnumber` INT(11) DEFAULT '0' COMMENT '序号  1234567 已此类推',
  `anumber` INT(11) DEFAULT '0' COMMENT '退菜关联号 和tnumber 对应',
  `mnumber` INT(11) DEFAULT '0' COMMENT ' 关联序号,比如inumber号有退菜。退菜项关联的此号码就是上述菜的号码',
  `type` CHAR(1) DEFAULT '0' COMMENT 'class =1 为正常菜品,class =2 菜的烧法class = 3 为菜的特殊内容,比如退菜理由,换台原因等信息',
  `billno` VARCHAR(20) DEFAULT NULL,
  `orderno` VARCHAR(10) DEFAULT '' COMMENT 'order单号 针对自动开单项目类。ORDERNO 号位AUTO  重新计算的时候 用于茶位费,包厢费等自动类型',
  `sta` CHAR(1) NOT NULL DEFAULT '' COMMENT '状态 I  有效,X 冲销 ',
  `shift` CHAR(1) NOT NULL DEFAULT '' COMMENT '班次',
  `empid` VARCHAR(10) DEFAULT '' COMMENT '点菜工号',
  `biz_date` DATETIME NOT NULL COMMENT '营业日期',
  `note_code` VARCHAR(10) NOT NULL DEFAULT '' COMMENT '菜本',
  `sort_code` VARCHAR(10) NOT NULL DEFAULT '' COMMENT '菜类',
  `code` VARCHAR(10) NOT NULL DEFAULT '' COMMENT '菜代码 付款代码 9001 等',
  `tocode` VARCHAR(3) DEFAULT '' COMMENT '报表分类项 针对菜名和有金额的内容',
  `cond_code` VARCHAR(100) DEFAULT '0' COMMENT '物料代码,烧法',
  `cook` VARCHAR(200) DEFAULT NULL,
  `printid` INT(11) DEFAULT '0' COMMENT '打印号,用于划菜使用,每天菜都是从1 开始 累计,只针对菜名累加 退菜等这些属性为0 ',
  `descript` VARCHAR(80) NOT NULL DEFAULT '' COMMENT '菜名',
  `descript_en` VARCHAR(80) NOT NULL DEFAULT '' COMMENT '菜英文名',
  `unit` VARCHAR(4) NOT NULL DEFAULT '' COMMENT '单位',
  `number` DECIMAL(12,2) NOT NULL DEFAULT '0.00' COMMENT '数量',
  `pinumber` INT(11) DEFAULT '0' COMMENT '打印次数',
  `price` DECIMAL(12,2) NOT NULL DEFAULT '0.00' COMMENT '单价',
  `amount` DECIMAL(12,2) NOT NULL DEFAULT '0.00' COMMENT ' 金额',
  `amount1` DECIMAL(12,2) DEFAULT '0.00' COMMENT '菜品原金额分摊额',
  `amount2` DECIMAL(12,2) DEFAULT '0.00' COMMENT '菜品折扣分摊额',
  `amount3` DECIMAL(12,2) DEFAULT '0.00' COMMENT '菜品服务费分摊额',
  `amount4` DECIMAL(12,2) DEFAULT '0.00',
  `amount5` DECIMAL(12,2) DEFAULT '0.00' COMMENT '打折比率 如0.15  ',
  `cost` DECIMAL(12,2) NOT NULL DEFAULT '0.00' COMMENT '成本额  ',
  `flag` VARCHAR(30) NOT NULL DEFAULT '' COMMENT '菜名flag 属性,针对菜谱来定,判断是菜的属性',
  `flag1` VARCHAR(30) DEFAULT '0000000000' COMMENT '菜flag1  - 本次点单菜属性 1234567890  先设10   第1 位0 代表模式计算 1单菜折扣,第2位 0 服务费按模式 1按主单 第3位 0服务费不打折 1服务费打折\r\n第4位  0附加税不打折 1附加税打折  第5位 1表示单菜款待   其他具体再定. 付款这些不需要填 第10 最后一位TF 表示是否划菜已上菜',
  `reason` CHAR(3) DEFAULT '' COMMENT '理由 退菜',
  `dsc` DECIMAL(12,2) DEFAULT '0.00' COMMENT '折扣总额',
  `srv` DECIMAL(12,2) DEFAULT '0.00' COMMENT '服务费额',
  `srv0` DECIMAL(12,2) DEFAULT NULL,
  `srv_dsc` DECIMAL(12,2) DEFAULT NULL,
  `tax` DECIMAL(12,2) DEFAULT '0.00' COMMENT '税额',
  `tax0` DECIMAL(12,2) DEFAULT NULL,
  `tax_dsc` DECIMAL(12,2) DEFAULT NULL,
  `tableno` VARCHAR(10) DEFAULT NULL,
  `siteno` VARCHAR(5) DEFAULT '' COMMENT '座位号',
  `info` VARCHAR(50) DEFAULT '' COMMENT '信息备注',
  `cardno` VARCHAR(20) DEFAULT '' COMMENT ' 卡信息信息备注,记录贵宾卡,信用卡等号码,ar账号等',
  `cardinfo` VARCHAR(50) DEFAULT '' COMMENT '卡信息备注,如客人姓名：+卡余额,    分割符号为 `姓名``余额`, 有特殊需要提供给账单打印使用 余额应是记录查询时余额,需要相减后获得当时余额',
  `kitchen` VARCHAR(40) DEFAULT '' COMMENT '厨房打印信息 此菜打印到哪些厨房过',
  `pcid` VARCHAR(20) DEFAULT '' COMMENT ' 记录站点点菜站点 ,可以为空',
  `empid1` VARCHAR(10) DEFAULT '' COMMENT '服务员号',
  `empid2` VARCHAR(10) DEFAULT '' COMMENT '划菜工号等',
  `empid3` VARCHAR(10) DEFAULT '' COMMENT '更改工号',
  `draw_date` DATETIME DEFAULT NULL COMMENT '划菜时间',
  `create_user` VARCHAR(20) NOT NULL,
  `create_datetime` DATETIME NOT NULL,
  `modify_user` VARCHAR(20) NOT NULL,
  `modify_datetime` DATETIME NOT NULL,
  KEY `hotel_group_id` (`hotel_group_id`,`hotel_id`,`accnt`,`inumber`,`type`,`sta`,`biz_date`),
  KEY `hotel_group_id_2` (`hotel_group_id`,`hotel_id`,`accnt`,`type`,`billno`,`sta`,`shift`,`biz_date`,`code`),
  KEY `hotel_group_id_3` (`hotel_group_id`,`hotel_id`,`accnt`,`sta`,`code`)
) ENGINE=INNODB DEFAULT CHARSET=utf8 COMMENT='点菜明细表';
-- 跨酒店转账配置表
CREATE TABLE `pos_hotel_transfer` (
  `hotel_group_id` bigint(16) NOT NULL,
  `hotel_id` bigint(16) NOT NULL,
  `id` bigint(16) NOT NULL AUTO_INCREMENT,
  `transfer_hotel_group_id` bigint(16) NOT NULL,
  `transfer_hotel_id` bigint(16) NOT NULL,
  `transfer_hotel_code` varchar(100) DEFAULT NULL,
  `transfer_hotel_descript` varchar(100) DEFAULT NULL,
  `transfer_server_ip` varchar(100) DEFAULT NULL,
  `transaction_pms_code` varchar(10) DEFAULT NULL,
  `transaction_pms_descript` varchar(100) DEFAULT NULL,
  `transaction_ar_code` varchar(10) DEFAULT NULL,
  `transaction_ar_descript` varchar(100) DEFAULT NULL,
  `create_user` varchar(20) NOT NULL,
  `create_datetime` datetime NOT NULL,
  `modify_user` varchar(20) NOT NULL,
  `modify_datetime` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
-- 名人票券记录日志表(本地库)
CREATE TABLE `ticket_mr_log` (
  `hotel_group_id` bigint(20) DEFAULT NULL,
  `hotel_id` bigint(20) DEFAULT NULL,
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `soap_action` varchar(200) DEFAULT NULL,
  `in_value` text,
  `out_value` mediumtext,
  `create_user` varchar(20) DEFAULT NULL,
  `create_datetime` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `index_create` (`hotel_group_id`,`create_datetime`)
) ENGINE=MyISAM AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
-- 名人票券使用记录表(本地库)
CREATE TABLE `ticket_mr_result` (
  `hotel_group_id` bigint(20) NOT NULL,
  `hotel_id` bigint(20) NOT NULL,
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `methed_way` int(11) DEFAULT NULL,
  `FormulaId` varchar(20) DEFAULT NULL,
  `Tp_Id` varchar(200) DEFAULT NULL,
  `CategoryId` varchar(20) DEFAULT NULL,
  `ticketsn` varchar(200) DEFAULT NULL,
  `no` varchar(50) DEFAULT NULL,
  `xfcode` varchar(512) DEFAULT NULL,
  `jycode` varchar(512) NOT NULL,
  `amount` decimal(12,2) DEFAULT NULL,
  `trans_result` varchar(512) DEFAULT NULL,
  `create_datetime` datetime DEFAULT NULL,
  `strick` varchar(2) DEFAULT NULL,
  `strick_result` varchar(512) DEFAULT NULL,
  `modify_datetime` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `index_jy` (`jycode`(255))
) ENGINE=MyISAM AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;


-- --------------页面的菜谱排行榜过程
DROP PROCEDURE IF EXISTS `up_pos_rep_possale_view`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `up_pos_rep_possale_view`(IN arg_hotel_group_id	BIGINT(16),
	IN arg_hotel_id 	BIGINT(16),
	IN arg_pccodes		VARCHAR(255),
	IN arg_empid		VARCHAR(20),
	IN arg_shift 		VARCHAR(1),
	IN arg_sorts		VARCHAR(255),
  IN arg_plus		VARCHAR(20),
	IN arg_begin		DATETIME,
	IN arg_end		DATETIME)
BEGIN
	DECLARE	var_sbegin	VARCHAR(10);
	DECLARE	var_send	VARCHAR(10);
  DECLARE var_sql VARCHAR(512);
	
	IF IFNULL(arg_pccodes,'') = '' OR arg_pccodes = 'ALL' THEN
		SET arg_pccodes = 'all';
	END IF;
	IF IFNULL(arg_empid,'') = '' THEN
		SET arg_empid = '{{{';
	END IF;
	IF IFNULL(arg_shift,'') = '' THEN
		SET arg_shift = '9';
	END IF;
	
	IF arg_sorts IS NULL OR arg_sorts='*' THEN
		SET arg_sorts = '*';
	END IF;
	
	SET var_sbegin = CONCAT(DATE_FORMAT(arg_begin,'%y%m%d'),'0000');
	SET var_send = CONCAT(DATE_FORMAT(arg_end,'%y%m%d'),'9999');
	
--	INSERT gdsmsg SELECT CONCAT(IFNULL(arg_pccodes,''),'/',IFNULL(arg_empid,''),'/',IFNULL(arg_shift,''),'/',IFNULL(arg_sorts,''),'/',arg_begin);
	
	DROP TEMPORARY TABLE IF EXISTS tmp_possale;
	DROP TEMPORARY TABLE IF EXISTS tmp_pos_detail;
	DROP TEMPORARY TABLE IF EXISTS tmp_pos_master;
	
	CREATE TEMPORARY TABLE tmp_possale
	(
		pccode 		VARCHAR(10),
		pccode_name	VARCHAR(20),
		sort  		VARCHAR(10),
		sort_name	VARCHAR(30),
		plu_code	VARCHAR(10),
		plu_name	VARCHAR(80),
		new_name	VARCHAR(80),
		number 		DECIMAL(10,2),
		price 		DECIMAL(10,2),
		unit 		VARCHAR(4),
		srv 		DECIMAL(10,2),
		dsc 		DECIMAL(10,2),
		amount 		DECIMAL(10,2),
		cost 		DECIMAL(10,2)
	
	);
	
	CREATE TEMPORARY TABLE tmp_pos_detail SELECT * FROM pos_detail WHERE 1=2  ;
	CREATE TEMPORARY TABLE tmp_pos_master SELECT * FROM pos_master WHERE 1=2  ;
	
	
	INSERT INTO tmp_pos_master 
		SELECT * FROM pos_master WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND RIGHT(accnt,10) >= var_sbegin AND RIGHT(accnt,10) <= var_send 
			AND sta <> 'X' AND (INSTR(arg_pccodes,pccode)>= 0 OR arg_pccodes = 'all') AND (shift = arg_shift OR arg_shift = '9');
	INSERT INTO tmp_pos_master 
		SELECT * FROM pos_master_history WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND RIGHT(accnt,10) >= var_sbegin AND RIGHT(accnt,10) <= var_send 
			AND sta <> 'X' AND (INSTR(arg_pccodes,pccode)>= 0 OR arg_pccodes = 'all') AND (shift = arg_shift OR arg_shift = '9');		
-- 如果有菜品名称输入		
IF LENGTH(arg_plus)>1 THEN --
    SET var_sql = CONCAT(" 
    INSERT INTO tmp_pos_detail 
		SELECT * FROM pos_detail WHERE hotel_group_id = ",arg_hotel_group_id," AND hotel_id = ",arg_hotel_id," AND RIGHT(accnt,10) >= '",var_sbegin,"' AND RIGHT(accnt,10) <= '",var_send, 
			"' AND sta <> 'X' AND accnt IN (SELECT accnt FROM tmp_pos_master)  AND (create_user = '",arg_empid,"' OR '",arg_empid,"' = '{{{' )   AND ( descript like '%",arg_plus,"%'  or code like '%",arg_plus,"%' ) ;
    ");
    	SET @exec_sql = var_sql;  
   	  PREPARE stmt FROM @exec_sql;
    	EXECUTE stmt;
       SET var_sql = CONCAT("
    INSERT INTO tmp_pos_detail 
		SELECT * FROM pos_detail_history WHERE hotel_group_id = ",arg_hotel_group_id," AND hotel_id = ",arg_hotel_id," AND RIGHT(accnt,10) >= '",var_sbegin,"' AND RIGHT(accnt,10) <= '",var_send, 
			"' AND sta <> 'X' AND accnt IN (SELECT accnt FROM tmp_pos_master)   AND (create_user = '",arg_empid,"' OR '",arg_empid,"' = '{{{' )   AND ( descript like '%",arg_plus,"%'  or code like '%",arg_plus,"%' ) ;
    ");
    	SET @exec_sql = var_sql;  
   	  PREPARE stmt FROM @exec_sql;
    	EXECUTE stmt;

ELSE	

	INSERT INTO tmp_pos_detail 
		SELECT * FROM pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND RIGHT(accnt,10) >= var_sbegin AND RIGHT(accnt,10) <= var_send 
			AND sta <> 'X' AND accnt IN (SELECT accnt FROM tmp_pos_master) AND (create_user = arg_empid OR arg_empid = '{{{');
	INSERT INTO tmp_pos_detail 
		SELECT * FROM pos_detail_history WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND RIGHT(accnt,10) >= var_sbegin AND RIGHT(accnt,10) <= var_send 
			AND sta <> 'X' AND accnt IN (SELECT accnt FROM tmp_pos_master) AND (create_user = arg_empid OR arg_empid = '{{{');
END IF ;

	UPDATE tmp_pos_detail SET descript = SUBSTRING(descript,4,CHAR_LENGTH(descript)) WHERE descript LIKE '[退]%';
		
 	INSERT INTO tmp_possale(pccode,pccode_name,sort,sort_name,plu_code,plu_name,new_name,number,price,unit,srv,dsc,amount,cost)
		SELECT a.pccode,c.descript,b.sort_code,d.descript,b.code,e.descript,b.descript AS new_name,SUM(b.number),b.price,b.unit,SUM(b.srv),SUM(b.dsc),SUM(b.amount),SUM(b.cost)
		FROM tmp_pos_master a,tmp_pos_detail b,pos_pccode c,pos_sort_all d,pos_plu_all e
			WHERE c.hotel_group_id = arg_hotel_group_id AND c.hotel_id = arg_hotel_id AND d.hotel_group_id = arg_hotel_group_id AND d.hotel_id = arg_hotel_id
				AND a.accnt = b.accnt AND (INSTR(arg_pccodes,a.pccode) > 0 OR arg_pccodes = 'all') AND (INSTR(arg_sorts,b.sort_code) > 0 OR arg_sorts = '*') AND RIGHT(a.accnt,10) >= var_sbegin
				AND RIGHT(a.accnt,10) <= var_send AND a.pccode = c.code AND b.sort_code = d.code AND e.hotel_id = arg_hotel_id AND e.hotel_group_id = arg_hotel_group_id AND b.code = e.code -- AND e.code = f.code 
				AND e.hotel_id = arg_hotel_id AND e.hotel_group_id = arg_hotel_group_id AND b.code = e.code AND b.sort_code = e.sort_code
			GROUP BY c.descript,b.sort_code,d.descript,b.code,e.descript,b.price,b.unit 
			ORDER BY b.sort_code,b.code;
	
	IF arg_pccodes = 'all' THEN
		SELECT '' AS pccode,'餐厅' AS pccode_name,sort,sort_name,plu_code,plu_name,new_name,SUM(number) AS number,price,unit,SUM(srv) AS srv,SUM(dsc) AS dsc,SUM(amount) AS amount,SUM(cost) AS cost FROM tmp_possale GROUP BY sort,sort_name,plu_code,plu_name,new_name,price,unit  ORDER BY sort,plu_name,number DESC;
	ELSE
		SELECT pccode,pccode_name,sort,sort_name,plu_code,plu_name,new_name,number,price,unit,srv,dsc,amount,cost FROM tmp_possale ORDER BY sort,pccode,number DESC;
	END IF;
		
	DROP TEMPORARY TABLE IF EXISTS tmp_possale;
	DROP TEMPORARY TABLE IF EXISTS tmp_pos_detail;
	DROP TEMPORARY TABLE IF EXISTS tmp_pos_master;
END
;;
DELIMITER ;

CREATE TABLE `pos_bill_addition` (
  `hotel_group_id` bigint(16) NOT NULL,
  `hotel_id` bigint(16) NOT NULL,
  `id` bigint(16) NOT NULL AUTO_INCREMENT,
  `accnt` varchar(20) NOT NULL,
  `pcrec` varchar(20) DEFAULT '',
  `amount` decimal(10,2) DEFAULT '0.00',
  `srv` decimal(10,2) DEFAULT '0.00',
  `tax` decimal(10,2) DEFAULT '0.00',
  `dsc` decimal(10,2) DEFAULT '0.00',
  `amount_bal` decimal(10,2) DEFAULT '0.00',
  `srv_bal` decimal(10,2) DEFAULT '0.00',
  `tax_bal` decimal(10,2) DEFAULT '0.00',
  `dsc_bal` decimal(10,2) DEFAULT '0.00',
  `create_user` varchar(10) DEFAULT '',
  `create_datetime` datetime DEFAULT NULL,
  `modify_user` varchar(10) DEFAULT '',
  `modify_datetime` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `index1` (`hotel_group_id`,`hotel_id`,`accnt`),
  KEY `index2` (`hotel_group_id`,`hotel_id`,`pcrec`)
) ENGINE=InnoDB AUTO_INCREMENT=74 DEFAULT CHARSET=utf8 COMMENT='用于记录上一次账单打印时金额,服务费,折扣等';

-- ----------------------------
--  Procedure definition for `up_pos_bill_print_new`
-- ----------------------------
DROP PROCEDURE IF EXISTS `up_pos_bill_print_new`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `up_pos_bill_print_new`(
	IN arg_hotel_group_id 	BIGINT,
	IN arg_hotel_id		BIGINT,
	IN arg_accnt 		VARCHAR(20),
	IN arg_shift_o		VARCHAR(2),
	IN arg_type 		CHAR(1),
	IN arg_mode 		CHAR(1),
	IN arg_empno 		VARCHAR(20),
	IN arg_lang		VARCHAR(5),
	IN arg_billdefine	VARCHAR(10)
	)
BEGIN
	DECLARE var_pcrec 		VARCHAR(20);
	DECLARE	var_cashier		VARCHAR(20);
	DECLARE var_shift		VARCHAR(10);
	DECLARE var_market		VARCHAR(20);
	DECLARE var_maxid		BIGINT;
	DECLARE var_detailcount		INT;
	DECLARE var_gsts	     	INT;
	DECLARE var_amount		DECIMAL(10,2);
	DECLARE var_srv 		DECIMAL(10,2) DEFAULT 0;  
	DECLARE var_dsc			DECIMAL(10,2) DEFAULT 0;  
	DECLARE var_srvtotal		DECIMAL(10,2) DEFAULT 0;  
	DECLARE var_dectotal		DECIMAL(10,2) DEFAULT 0;
	DECLARE var_srv_bal		DECIMAL(10,2) DEFAULT 0;
	DECLARE var_dsc_bal		DECIMAL(10,2) DEFAULT 0;
	DECLARE var_tax_bal		DECIMAL(10,2) DEFAULT 0;  
	DECLARE var_lastrnum		BIGINT;
	DECLARE var_lastpnum		BIGINT;
	DECLARE var_accnt		VARCHAR(20);
	DECLARE var_pccode		VARCHAR(20);
	DECLARE var_blankline		INT;
	DECLARE var_delpagerows 	INT DEFAULT 0;
	DECLARE var_maxdetailid		BIGINT;
	DECLARE var_paycode		VARCHAR(20);
	DECLARE var_paydesc		VARCHAR(50);
	DECLARE var_credit 		DECIMAL(10,2);
	DECLARE var_info1		VARCHAR(50);
	DECLARE var_info2 		VARCHAR(50);
	DECLARE var_cardno 		VARCHAR(20);
	DECLARE var_bank		VARCHAR(20);
	DECLARE var_catposting		VARCHAR(20);
	DECLARE var_payremark		VARCHAR(500);
	DECLARE var_biz_date		DATETIME;
	DECLARE var_ishistory		CHAR(1) DEFAULT 'T';
	DECLARE var_sta			CHAR(1);
	DECLARE var_tableno		VARCHAR(20);
	DECLARE var_credittotal		DECIMAL(10,2);
	DECLARE var_charge		DECIMAL(10,2) DEFAULT 0;
	DECLARE var_chargetotal		DECIMAL(10,2) DEFAULT 0;
	DECLARE var_isshow		CHAR(1);
	DECLARE var_pagecolums		INT;
	DECLARE done_cursor 		INT DEFAULT 0 ;
	DECLARE t_error 		INT DEFAULT 0 ;
	DECLARE var_master_cus CURSOR FOR SELECT accnt,IFNULL(lastpnum,0) FROM tmp_pos_master WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND sta <> 'X' AND pcrec = var_pcrec ORDER BY accnt;
	DECLARE var_account_cus CURSOR FOR SELECT a.paycode,a.descript,a.credit,a.info1,a.info2,a.cardno,a.bank,b.cat_posting FROM tmp_pos_account a LEFT JOIN code_transaction b ON a.paycode = b.code WHERE a.hotel_group_id = arg_hotel_group_id AND a.hotel_id = arg_hotel_id AND a.sta <> 'X' AND b.hotel_group_id = arg_hotel_group_id AND b.hotel_id = arg_hotel_id AND b.arrange_code = '98' ;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done_cursor = 1; 
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET t_error=1;
	
	DROP TEMPORARY TABLE IF EXISTS tmp_pos_master;
	DROP TEMPORARY TABLE IF EXISTS tmp_pos_account;
	DROP TEMPORARY TABLE IF EXISTS tmp_pos_detail;
	DROP TEMPORARY TABLE IF EXISTS tmp_pos_bill_pre;
	
	CREATE TEMPORARY TABLE tmp_pos_master SELECT * FROM pos_master WHERE 1=2  ;
	CREATE TEMPORARY TABLE tmp_pos_account SELECT * FROM pos_account WHERE 1=2;
	CREATE TEMPORARY TABLE tmp_pos_detail SELECT * FROM pos_detail WHERE 1=2 ;	
--	insert a(msg) select concat(arg_accnt,'/',ifnull(arg_mode,''));
	CREATE TEMPORARY TABLE tmp_pos_bill_pre(
		hotel_group_id	BIGINT,
		hotel_id 	BIGINT,
		id 		BIGINT NOT NULL AUTO_INCREMENT,
		pccode 		VARCHAR(20) DEFAULT NULL,
		pccode_des	VARCHAR(50) DEFAULT NULL,
		biz_date 	DATETIME    DEFAULT NULL,
		shift 		VARCHAR(10) DEFAULT NULL,
		shift_desc	VARCHAR(10) DEFAULT NULL,
		cashier 	VARCHAR(20) DEFAULT NULL,
		cashier_desc	VARCHAR(20) DEFAULT NULL,
		tableno	 	VARCHAR(20) DEFAULT NULL,
		tableno_desc 	VARCHAR(50) DEFAULT NULL,
		gsts 		INT 	    DEFAULT NULL,		
		TYPE 		CHAR(1)     DEFAULT NULL,
		accnt 		VARCHAR(20) DEFAULT NULL,
		plu_code	VARCHAR(20) DEFAULT NULL,
		plu_des		CHAR(20)    DEFAULT NULL,
		tocode		VARCHAR(10) DEFAULT NULL,
		tocode_des	VARCHAR(20) DEFAULT NULL,
		sta 		VARCHAR(1)  DEFAULT NULL,
		number 		DECIMAL(10,2) DEFAULT NULL,
		price 		DECIMAL(10,2) DEFAULT NULL,
		amount 		DECIMAL(10,2) DEFAULT NULL,
		srv 		DECIMAL(10,2) DEFAULT NULL,
		dsc 	  	DECIMAL(10,2) DEFAULT NULL,
		srv_rate	DECIMAL(10,2) DEFAULT NULL,
		dsc_rate 	DECIMAL(10,2) DEFAULT NULL,
		paydesc		VARCHAR(500) DEFAULT NULL,
		info1		VARCHAR(200) DEFAULT NULL,
		info2		VARCHAR(200) DEFAULT NULL,
		info3		VARCHAR(200) DEFAULT NULL,
		info4		VARCHAR(200) DEFAULT NULL,
		info5		VARCHAR(200) DEFAULT NULL,
		PRIMARY KEY(id)	
	);
	
	SELECT IFNULL(b.detail_rows,0) INTO var_pagecolums FROM bill_define a,bill_template b WHERE a.hotel_group_id = arg_hotel_group_id AND a.hotel_id = arg_hotel_id AND a.code = arg_billdefine AND b.hotel_group_id = arg_hotel_group_id AND b.hotel_id = arg_hotel_id AND a.template = b.code AND b.language = arg_lang;
	SET var_chargetotal = 0;
	IF EXISTS(SELECT 1 FROM pos_master WHERE accnt = arg_accnt AND hotel_id = arg_hotel_id AND hotel_group_id = arg_hotel_group_id) THEN
		SET var_ishistory = 'F';
		-- 当前数据考虑接打
		-- 判断是否有联单
		SELECT IFNULL(pcrec,''),IFNULL(lastrnum,0),pccode,biz_date,sta,shift,tableno INTO var_pcrec,var_lastrnum,var_pccode,var_biz_date,var_sta,var_shift,var_tableno FROM pos_master WHERE accnt = arg_accnt AND hotel_id = arg_hotel_id AND hotel_group_id = arg_hotel_group_id;
		IF (var_pcrec <> '') THEN
			INSERT tmp_pos_master SELECT * FROM pos_master WHERE pcrec = var_pcrec AND hotel_id = arg_hotel_id AND hotel_group_id = arg_hotel_group_id;
			INSERT tmp_pos_account SELECT * FROM pos_account WHERE accnt IN (SELECT accnt FROM tmp_pos_master) AND hotel_id = arg_hotel_id AND hotel_group_id = arg_hotel_group_id;
			-- 判断是否是新账单
			IF (arg_mode = 'N') THEN
				OPEN var_master_cus;
				FETCH var_master_cus INTO var_accnt,var_lastpnum;
				WHILE done_cursor<>1 DO
					-- 如果是打印新账单,则删除上一次打印所保留的服务费,折扣金额,下一次打印以本次为准.
					DELETE FROM pos_bill_addition WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = var_accnt;		
					INSERT tmp_pos_detail SELECT * FROM pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = var_accnt ;
					
					SELECT IFNULL(MAX(id),0) INTO var_maxdetailid FROM pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = var_accnt;
					UPDATE pos_master SET lastpnum = var_maxdetailid WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = var_accnt;
					
					INSERT INTO pos_bill_addition(hotel_group_id,hotel_id,accnt,pcrec,amount,srv,tax,dsc,amount_bal,srv_bal,tax_bal,dsc_bal,create_user,create_datetime,modify_user,modify_datetime)
						SELECT arg_hotel_group_id,arg_hotel_id,var_accnt,var_pcrec,IFNULL(SUM(amount+srv+tax-dsc),0),IFNULL(SUM(srv),0),IFNULL(SUM(tax),0),IFNULL(SUM(dsc),0),0,0,0,0,arg_empno,NOW(),arg_empno,NOW() 
							FROM tmp_pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = var_accnt AND sta = 'I';
				FETCH var_master_cus INTO var_accnt,var_lastpnum;
				END WHILE; 
				CLOSE var_master_cus;
				SET done_cursor = 0; 
				SELECT SUM(amount+srv-dsc),SUM(srv),SUM(dsc) INTO var_chargetotal,var_srvtotal,var_dectotal FROM tmp_pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND sta <> 'X';			
			-- 接打
			ELSE
				OPEN var_master_cus;
				FETCH var_master_cus INTO var_accnt,var_lastpnum;
				WHILE done_cursor<>1 DO 
		--			if (var_lastpnum = 0) then
		--				delete from pos_bill_addition where hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = var_accnt;
		--			end if;
					INSERT tmp_pos_detail SELECT * FROM pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = var_accnt AND id > var_lastpnum;
					
					SELECT IFNULL(MAX(id),0) INTO var_maxdetailid FROM pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = var_accnt;
					UPDATE pos_master SET lastpnum = var_maxdetailid WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = var_accnt;
					SELECT SUM(amount+srv-dsc),SUM(srv),SUM(dsc) INTO var_charge,var_srv,var_dsc FROM pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = var_accnt AND sta <> 'X';
					SET var_chargetotal = var_chargetotal + var_charge,var_srvtotal = var_srvtotal + var_srv,var_dectotal = var_dectotal + var_dsc;
					
					IF EXISTS(SELECT 1 FROM pos_bill_addition WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = var_accnt) THEN
						UPDATE pos_bill_addition a,(SELECT accnt,IFNULL(SUM(amount+srv+tax-dsc),0) AS damount,IFNULL(SUM(srv),0) AS dsrv,IFNULL(SUM(tax),0) AS dtax,IFNULL(SUM(dsc),0) AS ddsc FROM pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = var_accnt AND sta = 'I' AND id <= var_lastpnum) b
							SET a.amount_bal = a.damount - b.amount,a.srv_bal = a.dsrv - b.srv,a.tax_bal = a.dtax - b.tax,a.dsc_bal = a.ddsc - b.dsc WHERE a.hotel_group_id = arg_hotel_group_id AND a.hotel_id = arg_hotel_id AND a.accnt = b.accnt;
						
						UPDATE pos_bill_addition a SET amount = var_charge,srv = var_srv,dsc = var_dsc WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = var_accnt;
					ELSE
						INSERT INTO pos_bill_addition(hotel_group_id,hotel_id,accnt,pcrec,amount,srv,tax,dsc,amount_bal,srv_bal,tax_bal,dsc_bal,create_user,create_datetime,modify_user,modify_datetime)
							SELECT arg_hotel_group_id,arg_hotel_id,var_accnt,var_pcrec,IFNULL(SUM(amount+srv+tax-dsc),0),IFNULL(SUM(srv),0),IFNULL(SUM(tax),0),IFNULL(SUM(dsc),0),0,0,0,0,arg_empno,NOW(),arg_empno,NOW() 
							FROM tmp_pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = var_accnt AND sta = 'I';					
					END IF;
					
				FETCH var_master_cus INTO var_accnt,var_lastpnum;
				END WHILE; 
				CLOSE var_master_cus;
				SET done_cursor = 0; 
			END IF;
			
			SELECT SUM(srv_bal),SUM(tax_bal),SUM(dsc_bal) INTO var_srv_bal,var_tax_bal,var_dsc_bal FROM pos_bill_addition WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND pcrec = var_pcrec;
		-- 未联单
		ELSE
			INSERT tmp_pos_master SELECT * FROM pos_master WHERE accnt = arg_accnt AND hotel_id = arg_hotel_id AND hotel_group_id = arg_hotel_group_id;
			INSERT tmp_pos_account SELECT * FROM pos_account WHERE accnt = arg_accnt AND hotel_id = arg_hotel_id AND hotel_group_id = arg_hotel_group_id;
			-- 未联单,新账单
			IF (arg_mode = 'N') THEN
				DELETE FROM pos_bill_addition WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = arg_accnt;
				INSERT tmp_pos_detail SELECT * FROM pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = arg_accnt AND sta <> 'X';
				
				SELECT IFNULL(MAX(id),0) INTO var_maxdetailid FROM pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = arg_accnt;
				UPDATE pos_master SET lastpnum = var_maxdetailid WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = arg_accnt;
				INSERT INTO pos_bill_addition(hotel_group_id,hotel_id,accnt,pcrec,amount,srv,tax,dsc,amount_bal,srv_bal,tax_bal,dsc_bal,create_user,create_datetime,modify_user,modify_datetime)
					SELECT arg_hotel_group_id,arg_hotel_id,arg_accnt,var_pcrec,IFNULL(SUM(amount+srv+tax-dsc),0),IFNULL(SUM(srv),0),IFNULL(SUM(tax),0),IFNULL(SUM(dsc),0),0,0,0,0,arg_empno,NOW(),arg_empno,NOW() 
						FROM tmp_pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = arg_accnt AND sta = 'I';
			-- 未联单,接打
			ELSE
				SELECT IFNULL(lastpnum,0) INTO var_lastpnum FROM tmp_pos_master WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = arg_accnt AND sta <> 'X';
		--		if (var_lastpnum = 0) then
		--			delete from pos_bill_addition where hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = arg_accnt;
		--		end if;
				INSERT tmp_pos_detail SELECT * FROM pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = arg_accnt AND id > var_lastpnum;
				
				SELECT IFNULL(MAX(id),0) INTO var_maxdetailid FROM pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = arg_accnt;
				UPDATE pos_master SET lastpnum = var_maxdetailid WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = arg_accnt;
					
				IF EXISTS(SELECT 1 FROM pos_bill_addition WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = arg_accnt) THEN
					UPDATE pos_bill_addition a,(SELECT accnt,IFNULL(SUM(amount+srv+tax-dsc),0) AS damount,IFNULL(SUM(srv),0) AS dsrv,IFNULL(SUM(tax),0) AS dtax,IFNULL(SUM(dsc),0) AS ddsc FROM pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = arg_accnt AND sta = 'I' AND id <= var_lastpnum) b
						SET a.amount_bal = b.damount - a.amount,a.srv_bal = b.dsrv - a.srv,a.tax_bal = b.dtax - a.tax,a.dsc_bal = b.ddsc - a.dsc 
						WHERE a.hotel_group_id = arg_hotel_group_id AND a.hotel_id = arg_hotel_id AND a.accnt = b.accnt;
				ELSE
					INSERT INTO pos_bill_addition(hotel_group_id,hotel_id,accnt,pcrec,amount,srv,tax,dsc,amount_bal,srv_bal,tax_bal,dsc_bal,create_user,create_datetime,modify_user,modify_datetime)
						SELECT arg_hotel_group_id,arg_hotel_id,arg_accnt,var_pcrec,IFNULL(SUM(amount+srv+tax-dsc),0),IFNULL(SUM(srv),0),IFNULL(SUM(tax),0),IFNULL(SUM(dsc),0),0,0,0,0,arg_empno,NOW(),arg_empno,NOW() 
						FROM tmp_pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = arg_accnt AND sta = 'I';					
				END IF;			
			END IF;
			SELECT SUM(amount+srv-dsc),SUM(srv),SUM(dsc) INTO var_chargetotal,var_srvtotal,var_dectotal FROM pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = arg_accnt AND sta <> 'X';	
			UPDATE pos_bill_addition a SET amount = var_chargetotal,srv = var_srvtotal,dsc = var_dectotal WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = arg_accnt;			
					
			SELECT SUM(srv_bal),SUM(tax_bal),SUM(dsc_bal) INTO var_srv_bal,var_tax_bal,var_dsc_bal FROM pos_bill_addition WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = arg_accnt;
		END IF;
	-- 历史账单,暂时不考虑接打
	ELSE
		-- 历史数据不管,全部不用接打
		SELECT IFNULL(pcrec,''),biz_date,sta,shift,tableno INTO var_pcrec,var_biz_date,var_sta,var_shift,var_tableno FROM pos_master_history WHERE accnt = arg_accnt AND hotel_id = arg_hotel_id AND hotel_group_id = arg_hotel_group_id;
		IF var_pcrec <> '' THEN
			INSERT tmp_pos_master SELECT * FROM pos_master_history WHERE pcrec = var_pcrec AND hotel_id = arg_hotel_id AND hotel_group_id = arg_hotel_group_id;
			INSERT tmp_pos_account SELECT * FROM pos_account_history WHERE accnt IN (SELECT accnt FROM tmp_pos_master) AND hotel_id = arg_hotel_id AND hotel_group_id = arg_hotel_group_id;
			INSERT tmp_pos_detail SELECT * FROM pos_detail_history WHERE accnt IN (SELECT accnt FROM tmp_pos_master) AND hotel_id = arg_hotel_id AND hotel_group_id = arg_hotel_group_id;
		ELSE
			INSERT tmp_pos_master SELECT * FROM pos_master_history WHERE accnt = arg_accnt AND hotel_id = arg_hotel_id AND hotel_group_id = arg_hotel_group_id;
			INSERT tmp_pos_account SELECT * FROM pos_account_history WHERE accnt = arg_accnt AND hotel_id = arg_hotel_id AND hotel_group_id = arg_hotel_group_id;
			INSERT tmp_pos_detail SELECT * FROM pos_detail_history WHERE accnt = arg_accnt AND hotel_id = arg_hotel_id AND hotel_group_id = arg_hotel_group_id;
		END IF;	
		SELECT SUM(amount+srv-dsc),SUM(srv),SUM(dsc) INTO var_chargetotal,var_srvtotal,var_dectotal FROM tmp_pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = var_accnt AND sta <> 'X';			
	END IF;
	UPDATE tmp_pos_detail SET descript = SUBSTRING(descript,4) WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND descript LIKE '[退]%';
	SET var_delpagerows = 0;
	IF (arg_mode <> 'N') THEN
		IF var_lastrnum > 0 THEN
			-- 到上一次为止已经打了多少行(var_lastrnum),插入空行
			SET var_blankline = 1;
			-- 20为账单一页所能打的明细行数,总空行除以明细行数取余,是因为假如前面几页全是空行,那是不用打印的,避免纸多次放入,但什么都没打印的情况
			SET var_delpagerows = var_lastrnum DIV var_pagecolums;
			SET var_lastrnum = MOD(var_lastrnum,var_pagecolums);
			WHILE var_blankline <= var_lastrnum DO
				INSERT tmp_pos_bill_pre(hotel_group_id,hotel_id,pccode,biz_date,shift,tableno,TYPE) SELECT arg_hotel_group_id,arg_hotel_id,var_pccode,var_biz_date,var_shift,var_tableno,'A';
				SET var_blankline = var_blankline + 1;
			END WHILE;
		END IF;	
	END IF;
	
	-- 添加点菜明细	
	INSERT INTO tmp_pos_bill_pre(hotel_group_id,hotel_id,pccode,pccode_des,shift,biz_date,tableno,TYPE,accnt,plu_code,plu_des,tocode,tocode_des,sta,number,price,amount,srv,dsc,srv_rate,dsc_rate,paydesc,info1,info2,info3,info4,info5)
		SELECT arg_hotel_group_id,arg_hotel_id,var_pccode,'',var_shift,var_biz_date,var_tableno,'A',arg_accnt,CODE,IFNULL(descript,''),tocode,'',sta,SUM(IFNULL(number,0)),IFNULL(price,0),SUM(IFNULL(amount,0)),SUM(IFNULL(srv,0.00)),SUM(IFNULL(dsc,0.00)),IFNULL(amount4,0.00),IFNULL(amount5,0.00),'','','','','','' 
			FROM tmp_pos_detail WHERE sta = 'I' AND TRIM(CODE) <> 'ML' GROUP BY CODE,descript,tocode,price,amount4,amount5;
	IF EXISTS(SELECT 1 FROM tmp_pos_detail WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND TRIM(CODE) <> 'ML') THEN
		INSERT INTO tmp_pos_bill_pre(hotel_group_id,hotel_id,pccode,pccode_des,shift,biz_date,tableno,TYPE,accnt,plu_code,plu_des,tocode,tocode_des,sta,number,price,amount,srv,dsc,srv_rate,dsc_rate,paydesc,info1,info2,info3,info4,info5)
			SELECT arg_hotel_group_id,arg_hotel_id,var_pccode,'',var_shift,var_biz_date,var_tableno,'B',arg_accnt,'XFXJ',' *应收小计*','','','I',NULL,NULL,IFNULL(SUM(amount),0.00),IFNULL(SUM(srv),0.00),IFNULL(SUM(srv),0.00),0,0,'','','','','','' FROM tmp_pos_detail WHERE sta = 'I';
		INSERT INTO tmp_pos_bill_pre(hotel_group_id,hotel_id,pccode,pccode_des,shift,biz_date,tableno,TYPE,accnt,plu_code,plu_des,tocode,tocode_des,sta,number,price,amount,srv,dsc,srv_rate,dsc_rate,paydesc,info1,info2,info3,info4,info5)
			SELECT arg_hotel_group_id,arg_hotel_id,var_pccode,'',var_shift,var_biz_date,var_tableno,'B',arg_accnt,'FWF',' *服务费*','','','I',NULL,NULL,IFNULL(SUM(srv),0.00)+var_srv_bal,IFNULL(SUM(srv),0.00),0,0,0,'','','','','','' FROM tmp_pos_detail WHERE sta = 'I';
-- 		INSERT INTO tmp_pos_bill_pre(hotel_group_id,hotel_id,pccode,pccode_des,shift,biz_date,tableno,TYPE,accnt,plu_code,plu_des,tocode,tocode_des,sta,number,price,amount,srv,dsc,srv_rate,dsc_rate,paydesc,info1,info2,info3,info4,info5)
-- 			SELECT arg_hotel_group_id,arg_hotel_id,var_pccode,'',var_shift,var_biz_date,var_tableno,'B',arg_accnt,'SF',' *税费*','080','','I',NULL,NULL,IFNULL(SUM(tax),0.00)+var_tax_bal,IFNULL(SUM(tax),0.00),0,0,0,'','','','','','' FROM tmp_pos_detail WHERE sta = 'I';
		INSERT INTO tmp_pos_bill_pre(hotel_group_id,hotel_id,pccode,pccode_des,shift,biz_date,tableno,TYPE,accnt,plu_code,plu_des,tocode,tocode_des,sta,number,price,amount,srv,dsc,srv_rate,dsc_rate,paydesc,info1,info2,info3,info4,info5)
			SELECT arg_hotel_group_id,arg_hotel_id,var_pccode,'',var_shift,var_biz_date,var_tableno,'B',arg_accnt,'DSC',' *折扣*','','','I',NULL,NULL,-1*(IFNULL(SUM(dsc)+var_dsc_bal,0.00)),IFNULL(SUM(dsc),0.00),0,0,0,'','','','','','' FROM tmp_pos_detail WHERE sta = 'I';
		INSERT INTO tmp_pos_bill_pre(hotel_group_id,hotel_id,pccode,pccode_des,shift,biz_date,tableno,TYPE,accnt,plu_code,plu_des,tocode,tocode_des,sta,number,price,amount,srv,dsc,srv_rate,dsc_rate,paydesc,info1,info2,info3,info4,info5)
			SELECT arg_hotel_group_id,arg_hotel_id,var_pccode,'',var_shift,var_biz_date,var_tableno,'B',arg_accnt,'XFXJ',' *应收合计*','','','I',NULL,NULL,IFNULL(var_chargetotal,0.00),IFNULL(var_srvtotal,0.00),IFNULL(var_dectotal,0.00),0,0,'','','','','','';
	END IF;
	IF (var_srv_bal <> 0) THEN
		INSERT INTO tmp_pos_bill_pre(hotel_group_id,hotel_id,pccode,pccode_des,shift,biz_date,tableno,TYPE,accnt,plu_code,plu_des,tocode,tocode_des,sta,number,price,amount,srv,dsc,srv_rate,dsc_rate,paydesc,info1,info2,info3,info4,info5)
			SELECT arg_hotel_group_id,arg_hotel_id,var_pccode,'',var_shift,var_biz_date,var_tableno,'B',arg_accnt,'FWF',' *服务费*','','','I',NULL,NULL,IFNULL(SUM(var_srv_bal),0.00),IFNULL(SUM(var_srv_bal),0.00),0,0,0,'','','','','','';
	END IF;
 --	if (var_tax_bal <> 0) then	
 --		INSERT INTO tmp_pos_bill_pre(hotel_group_id,hotel_id,pccode,pccode_des,shift,biz_date,tableno,TYPE,accnt,plu_code,plu_des,tocode,tocode_des,sta,number,price,amount,srv,dsc,srv_rate,dsc_rate,paydesc,info1,info2,info3,info4,info5)
 --			SELECT arg_hotel_group_id,arg_hotel_id,var_pccode,'',var_shift,var_biz_date,var_tableno,'B',arg_accnt,'SF',' *税费*','080','','I',NULL,NULL,IFNULL(SUM(var_tax_bal),0.00),IFNULL(SUM(var_tax_bal),0.00),0,0,0,'','','','','','';
 --	end if;
	IF (var_dsc_bal <> 0) THEN	
		INSERT INTO tmp_pos_bill_pre(hotel_group_id,hotel_id,pccode,pccode_des,shift,biz_date,tableno,TYPE,accnt,plu_code,plu_des,tocode,tocode_des,sta,number,price,amount,srv,dsc,srv_rate,dsc_rate,paydesc,info1,info2,info3,info4,info5)
			SELECT arg_hotel_group_id,arg_hotel_id,var_pccode,'',var_shift,var_biz_date,var_tableno,'B',arg_accnt,'DSC',' *折扣*','','','I',NULL,NULL,-1*IFNULL(SUM(var_dsc_bal),0.00),IFNULL(SUM(var_dsc_bal),0.00),0,0,0,'','','','','','';		
	END IF;
	IF (var_srv_bal <> 0 OR var_tax_bal <> 0 OR var_dsc_bal <> 0) THEN
		INSERT INTO tmp_pos_bill_pre(hotel_group_id,hotel_id,pccode,pccode_des,shift,biz_date,tableno,TYPE,accnt,plu_code,plu_des,tocode,tocode_des,sta,number,price,amount,srv,dsc,srv_rate,dsc_rate,paydesc,info1,info2,info3,info4,info5)
			SELECT arg_hotel_group_id,arg_hotel_id,var_pccode,'',var_shift,var_biz_date,var_tableno,'B',arg_accnt,'XFXJ',' *应收合计*','','','I',NULL,NULL,IFNULL(var_chargetotal,0.00),IFNULL(var_srvtotal,0.00),IFNULL(var_dectotal,0.00),0,0,'','','','','','';		
	END IF;
	-- 如果是已经结账的,则添加付款方式
	IF var_sta = 'O' THEN
		SELECT create_user INTO var_cashier FROM tmp_pos_account WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND number = 2 AND sta = 'O' ORDER BY id DESC LIMIT 1;
		SET var_payremark = '付款:  ';
		SET var_credittotal = 0;
		OPEN var_account_cus;
		FETCH var_account_cus INTO var_paycode,var_paydesc,var_credit,var_info1,var_info2,var_cardno,var_bank,var_catposting;
		WHILE done_cursor<>1 DO 
			IF (var_catposting = 'RCV') THEN
				SET var_payremark = CONCAT(var_payremark,var_paydesc,' ',IFNULL(var_credit,0),'(余额:',IFNULL(var_bank,0)-IFNULL(var_credit,0),');');
			ELSEIF(var_catposting = 'TF' OR var_catposting = 'TA') THEN
				SET var_payremark = CONCAT(var_payremark,var_paydesc,' ',IFNULL(var_credit,0),'-',var_info2,';');
			ELSEIF(var_catposting = 'ENT' OR var_catposting = 'DSC') THEN
				SET var_payremark = CONCAT(var_payremark,var_paydesc,' ',IFNULL(var_credit,0),'-',var_info1,';');
			ELSE
				SET var_payremark = CONCAT(var_payremark,var_paydesc,' ',IFNULL(var_credit,0),';',CHAR(10),SPACE(12));
			END IF;
			SET var_credittotal = var_credittotal + IFNULL(var_credit,0);
		FETCH var_account_cus INTO var_paycode,var_paydesc,var_credit,var_info1,var_info2,var_cardno,var_bank,var_catposting;
		END WHILE; 
		CLOSE var_account_cus;
		UPDATE tmp_pos_bill_pre SET paydesc = var_payremark ;
		UPDATE tmp_pos_bill_pre SET cashier = var_cashier WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id;
		UPDATE tmp_pos_bill_pre a,USER b SET cashier_desc = b.name WHERE a.hotel_group_id = arg_hotel_group_id AND a.hotel_id = arg_hotel_id AND b.hotel_group_id = arg_hotel_group_id AND b.hotel_id = arg_hotel_id AND a.cashier = b.code;
		UPDATE tmp_pos_bill_pre SET info1 = CONCAT('合计:  ',TO_UPPER_NUM(var_credittotal,2)) WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id;
	END IF;
	-- 打印当前单子是,修改主单上打印的函数var_delpagerows*20 + var_maxid为:删除的页数*每页行数+本次打印行数
	IF var_ishistory = 'F' THEN
	--	SELECT MAX(id) INTO var_maxid FROM tmp_pos_bill_pre WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id;
		SELECT COUNT(*) INTO var_detailcount FROM tmp_pos_bill_pre WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id;
		IF (var_pcrec <> '') THEN
			UPDATE pos_master SET lastrnum = var_delpagerows*20 + var_detailcount WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND pcrec = var_pcrec;
		ELSE
			UPDATE pos_master SET lastrnum = var_delpagerows*20 + var_detailcount WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id AND accnt = arg_accnt;
		END IF;		
	END IF;
		
	-- 更新一些中文描述信息,比如营业点名称,班次描述
	SELECT SUM(gsts) INTO var_gsts FROM tmp_pos_master WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id;
	UPDATE tmp_pos_bill_pre SET gsts = var_gsts WHERE hotel_group_id = arg_hotel_group_id AND hotel_id = arg_hotel_id;
	UPDATE tmp_pos_bill_pre a,pos_pccode b SET pccode_des = b.descript WHERE a.hotel_group_id = arg_hotel_group_id AND a.hotel_id = arg_hotel_id AND b.hotel_group_id = arg_hotel_group_id AND b.hotel_id = arg_hotel_id AND a.pccode = b.code;
	UPDATE tmp_pos_bill_pre a,code_base b SET shift_desc = b.descript WHERE a.hotel_group_id = arg_hotel_group_id AND a.hotel_id = arg_hotel_id AND b.hotel_group_id = arg_hotel_group_id AND b.hotel_id = arg_hotel_id AND b.parent_code = 'pos_cashier' AND a.shift = b.code;
	UPDATE tmp_pos_bill_pre a,pos_pccode_table b SET tableno_desc = b.descript WHERE a.hotel_group_id = arg_hotel_group_id AND a.hotel_id = arg_hotel_id AND b.hotel_group_id = arg_hotel_group_id AND b.hotel_id = arg_hotel_id AND b.pccode = var_pccode AND a.tableno = b.code;
	IF (arg_mode = 'N') THEN
		SET var_isshow = 'Y';
	ELSEIF (arg_mode <> 'N' AND var_lastrnum = 0) THEN
		SET var_isshow = 'Y';
	ELSE
		SET var_isshow = 'N';
	END IF;
	
	SELECT id,hotel_group_id,hotel_id,pccode,pccode_des,biz_date,shift,shift_desc,cashier,cashier_desc,tableno,tableno_desc,gsts,TYPE,accnt,plu_code,plu_des,sta,number,price,amount,srv,dsc,srv_rate,dsc_rate,paydesc,info1,info2,info3,info4,var_isshow AS isShow FROM tmp_pos_bill_pre ORDER BY id;
	
	DROP TEMPORARY TABLE IF EXISTS tmp_pos_master;
	DROP TEMPORARY TABLE IF EXISTS tmp_pos_account;
	DROP TEMPORARY TABLE IF EXISTS tmp_pos_detail;
	DROP TEMPORARY TABLE IF EXISTS tmp_pos_bill_pre;	
END
;;
DELIMITER ;
