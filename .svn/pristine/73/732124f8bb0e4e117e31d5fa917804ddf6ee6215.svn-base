package com.greencloud.service.impl;

import static com.greencloud.constant.BizExceptionConstant.INVALID_PARAM;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import com.greencloud.dao.ICodeBaseDao;
import com.greencloud.dao.IHotelDao;
import com.greencloud.dao.IPosHibernateDao;
import com.greencloud.dao.IPosSubDao;
import com.greencloud.entity.CodeBase;
import com.greencloud.entity.EntityInfo;
import com.greencloud.entity.Hotel;
import com.greencloud.entity.OperationInfo;
import com.greencloud.entity.PosAccntSync;
import com.greencloud.entity.ReportCenter;
import com.greencloud.exception.BizException;
import com.greencloud.service.IPosSubService;
import com.greencloud.util.ModelUtil;

public class PosSubServiceImpl implements IPosSubService {
	private IPosSubDao  posSubDao;
	private ICodeBaseDao codeBaseDao;
	private IHotelDao hotelDao;
	private IPosHibernateDao posHibernateDao; 
	
	

	public void setPosHibernateDao(IPosHibernateDao posHibernateDao) {
		this.posHibernateDao = posHibernateDao;
	}

	public void setHotelDao(IHotelDao hotelDao) {
		this.hotelDao = hotelDao;
	}

	public void setCodeBaseDao(ICodeBaseDao codeBaseDao) {
		this.codeBaseDao = codeBaseDao;
	}

	public void setPosSubDao(IPosSubDao posSubDao) {
		this.posSubDao = posSubDao;
	}

	

	@Override
	public List<Object> getDataBySql(String sql) {
		return posSubDao.getDataBySql(sql);
	}

	@Override
	public void updateDataBySql(String sql) {
		posSubDao.updateDataBySql(sql); 
	}

	@Override
	public List<CodeBase> getCodeBaseByParentCode(long hotelGroupId,long hotelId,String parentCode) {
		CodeBase cb=new CodeBase();
		cb.setHotelGroupId(hotelGroupId);
		cb.setHotelId(hotelId);
		cb.setParentCode(parentCode);
		cb.setIsHalt("F");
		List<CodeBase> list = codeBaseDao.list(cb);
		return list;
	}

	@Override
	public Object getCodeDetail(Object object) {
		return posSubDao.getCodeDetail(object);
	}

	@Override
	public List<Object> getCodeList(String ename,Object object) {
		return posSubDao.getCodeList(ename,object);
	}

	@Override
	public String getHotelTree(Boolean filterR) {
		return null;
	}

	@Override
	public void saveCode(Object codeTemp) {
		List<Object> objList =  posSubDao.isCodeExistedCc(codeTemp);
		if(objList!=null && objList.size()>0){
			throw new BizException("与酒店已有代码冲突！",INVALID_PARAM); 
		}else{
			posSubDao.saveCode(codeTemp);
		}
	}
	
	@Override
	public void saveCodeGroup(Object object, String hotels,long hotelGroupId) {
		if (object instanceof EntityInfo)
		{
			ModelUtil.setPropertyValue(object, "hotelGroupId", hotelGroupId);
			ModelUtil.setPropertyValue(object, "hotelId", 0l);
			List<Object> objList =  posSubDao.isCodeExistedCc(object);
			if(objList!=null && objList.size()>0){
				throw new BizException("与酒店已有代码冲突！",INVALID_PARAM); 
			}else{
				//首先将集团端的保存下来
				posSubDao.saveCode(object);
				//然后保存各个酒店
				EntityInfo entityInfo = ((EntityInfo) object).cloneEx();
				List<Hotel> hotelList = hotelDao.findByhotelGroupId(hotelGroupId);
				for(Iterator<Hotel> i=hotelList.iterator();i.hasNext();){
					Hotel hotel = i.next();
					
					entityInfo.setId(null);
					entityInfo.setHotelId(hotel.getId());
					if(hotels != null && !hotels.equals("")){
						if(hotels.equals(".")){
							if(ModelUtil.hasProperty(entityInfo, "isHalt")){
								ModelUtil.setPropertyValue(entityInfo, "isHalt", "T");
							}
							
							if(ModelUtil.hasProperty(entityInfo, "halt")){
								ModelUtil.setPropertyValue(entityInfo, "halt", "T");
							}
						}else if(hotels.equals("*")){
							if(ModelUtil.hasProperty(entityInfo, "isHalt")){
								ModelUtil.setPropertyValue(entityInfo, "isHalt", "F");
							}
							
							if(ModelUtil.hasProperty(entityInfo, "halt")){
								ModelUtil.setPropertyValue(entityInfo, "halt", "F");
							}
						}else
						{
							String [] hotelArr = hotels.split(",");
							if(isExsit(hotelArr,hotel.getId().toString())){
								if(ModelUtil.hasProperty(entityInfo, "isHalt")){
									ModelUtil.setPropertyValue(entityInfo, "isHalt", "F");
								}
								
								if(ModelUtil.hasProperty(entityInfo, "halt")){
									ModelUtil.setPropertyValue(entityInfo, "halt", "F");
								}
							}else
							{
								if(ModelUtil.hasProperty(entityInfo, "isHalt")){
									ModelUtil.setPropertyValue(entityInfo, "isHalt", "T");
								}
								
								if(ModelUtil.hasProperty(entityInfo, "halt")){
									ModelUtil.setPropertyValue(entityInfo, "halt", "T");
								}
							}
						}
					}
					Object codeTempHotel = entityInfo.cloneEx();
					posSubDao.saveCode(codeTempHotel);
					
				}
			}
		}
	}

	
	
	public boolean isExsit(String[] hotels,String hotel)
	{
		if(hotels != null && hotels.length>0)
		{
			for(int i=0;i<hotels.length;i++)
			{
				if(hotels[i].equals(hotel))
				{
					return true;
				}
			}
			return false;
		}else
		{
			return false;
		}
	}

	@Override
	public void deleteCode(Object object,long hotelGroupId) {
		//第一步  取出详细信息
		Object ObjDetal = getCodeDetail(object);
		
		//第二步  判断是集团代码/集团类型/酒店代码（自己增加的）
		if(ModelUtil.hasProperty(ObjDetal, "hotelId")){
			Long hotelId = (Long)ModelUtil.getPropertyValue(ObjDetal, "hotelId");
			if(hotelId.intValue()>0){
				//酒店自己增加的   直接删除
				posSubDao.deleteCode(ObjDetal);
			}else{
				//集团的代码
				posHibernateDao.deleteCodeGroup(ObjDetal, hotelGroupId);
			}
		}
	}

	@Override
	public void updateCodeGroup(Object object,long hotelGroupId) {
		//直接集团内更新
		posSubDao.updateCode(object);
		posHibernateDao.updateCodeGroup(object,hotelGroupId);
	}

	@Override
	public void updateCodeSta(Object object,long hotelGroupId) {
		//第一步  取出详细信息
		Object ObjDetal = getCodeDetail(object);
		
		//第二步  判断是集团代码/集团类型/酒店代码（自己增加的）
		if(ModelUtil.hasProperty(ObjDetal, "hotelId")){
			Long hotelId = (Long)ModelUtil.getPropertyValue(ObjDetal, "hotelId");
			if(hotelId.intValue()>0){
				//酒店自己增加的   直接删除
				posSubDao.updateCodeSta(ObjDetal);
			}else{
				//集团的代码
				posHibernateDao.updateCodeGroupSta(ObjDetal, hotelGroupId);
			}
		}
	}

	@Override
	public void updateCode(Object object) {
		// TODO Auto-generated method stub
		posSubDao.updateCode(object);
	}

	@Override
	public void saveCodeCollection(ArrayList<Object> arr) {
		// TODO Auto-generated method stub
		for(Iterator<Object> i=arr.iterator();i.hasNext();){
			Object object = i.next();
			posSubDao.saveCode(object);
			}
	}

	@Override
	public List<Object> getSycCodeList(String ename, Object object, String date) {
		// TODO Auto-generated method stub
		return posSubDao.getSycCodeList(ename, object, date);
	}

	@Override
	public List<Object> getSycDaysList(String ename, Object object,
			String date, int days) {
		// TODO Auto-generated method stub
		return posSubDao.getSycDaysList(ename, object, date, days);
	}

	@Override
	public List<OperationInfo> getSycLocalDateList(String ename, Object object) {
		// TODO Auto-generated method stub
		return posSubDao.getSycLocalDateList(ename, object);
	}

	@Override
	public List<Object> getPosAccntList(String ename, Object object) {
		// TODO Auto-generated method stub
		return posSubDao.getPosAccntList(ename,object);
	}

	@Override
	public List<Object> getPosSyncAccntList(String ename,PosAccntSync posAccntSync,String type) {
		// TODO Auto-generated method stub
		return posSubDao.getPosSyncAccntList(ename, posAccntSync,type);
	}

	@Override
	public List<Object> getHotelAnalysis(long hotelGroupId, long hotelId,
			String biz_date) {
		// TODO Auto-generated method stub
		return posSubDao.getHotelAnalysis(hotelGroupId, hotelId, biz_date);
	}

	@Override
	public Object getCodeDetailHistory(String ename,Object object) {
		// TODO Auto-generated method stub
		return posSubDao.getCodeDetailHistory(ename, object);
	}

	@Override
	public String updatePosAuditProcess(long hotelGroupId, long hotelId) {
		// TODO Auto-generated method stub
		return posSubDao.updatePosAuditProcess(hotelGroupId, hotelId);
	}

	@Override
	public List<Object> getSycPmsCodeList(String ename, Object object,
			String date, String type) {
		// TODO Auto-generated method stub
		return posSubDao.getSycPmsCodeList(ename, object, date, type);
	}

	@Override
	public List<ReportCenter> getReportCenterByCategory(long hotelGroupId,	long hotelId, String category) {
		return posSubDao.getReportCenterByCategory(hotelGroupId, hotelId, category);
	}

	@Override
	public String updatePosAuditUpdatePosBizdate(long hotelGroupId, long hotelId) {
		// TODO Auto-generated method stub
		return posSubDao.updatePosAuditUpdatePosBizdate(hotelGroupId, hotelId);
	}

	@Override
	public List<Object> getPosAccntContainHistoryList(String ename,
			Object object) {
		// TODO Auto-generated method stub
		return posSubDao.getPosAccntContainHistoryList(ename, object);
	}

	@Override
	public List<Object> getHotelAnalysisShift(long hotelGroupId, long hotelId,
			String biz_date,String flag) {
		// TODO Auto-generated method stub
		return posSubDao.getHotelAnalysisShift(hotelGroupId, hotelId, biz_date, flag);
	}
}
