package com.greencloud.service;
import com.aua.service.IBaseService;
import com.aua.util.Container;

import java.math.BigDecimal;
import java.util.List;

import com.greencloud.dto.PosBillDto;
import com.greencloud.entity.PosMaster;
import com.greencloud.entity.PosOrder;
import com.greencloud.entity.PosPluAll;
import com.greencloud.entity.PosSortAll;

import org.springframework.dao.DataAccessException;
public interface IPosOrderService extends IBaseService
{
   /**
   *save posOrder object  method
   *@param posOrder PosOrder 
   *@throws DataAccessException 
   *@author  
   *@version 1.0
   *@date 2015-04-27 09:43
   */
  public void savePosOrder(PosOrder posOrder) throws DataAccessException;
  
   /**
   *update posOrder method
   *@param posOrder PosOrder
   *@throws DataAccessException 
   *@author 
   *@version 1.0
   *@date 2015-04-27 09:43
   */
  public void updatePosOrder(PosOrder posOrder) throws DataAccessException;
  
   /**
   *save or update posOrder object method
   *@param posOrder PosOrder
   *@throws DataAccessException
   *@author  
   *@version 1.0
   *@date 2015-04-27 09:43
   */
  public void saveOrUpdatePosOrder(PosOrder posOrder) throws DataAccessException;

  /**
   *query a container obj
   *@param posOrder PosOrder query vo
   *@param firstResult
   *@param maxResults 
   *@throws DataAccessException 
   *@author weihuawon
   *@date 2015-04-27 09:43
   */
  public Container<PosOrder> findPosOrder(PosOrder posOrder,int firstResult ,int maxResults)throws DataAccessException;
   
   /**
   *query posOrder collection method
   *@param posOrder PosOrder send query vo 
   *@throws DataAccessException 
   *@author 
   *@version 1.0
   *@date 2015-04-27  09:43
   */
  public List<PosOrder> listPosOrder(PosOrder posOrder)throws DataAccessException;
 
   /**
   *query posOrder collection method
   *@param posOrder PosOrder send query vo 
   *@param firstResult 
   *@param maxResults 
   *@throws DataAccessException 
   *@author 
   *@version 1.0
   *@date 2015-04-27  09:43
   */
  public List<PosOrder> listPosOrder(PosOrder posOrder,int firstResult ,int maxResults)throws DataAccessException;
 
  /**
   *count obj amount
   *@param posOrder PosOrder query vo
   *@throws DataAccessException
   *@author 
   *@date 2015-04-27 09:43
   */
  public int countPosOrder(PosOrder posOrder)throws DataAccessException;
   
   /**
   *query a posOrder by id 
   *@param id 
   *@throws DataAccessException 
   *@author 
   *@date 2015-04-27 09:43
   */
  public PosOrder findPosOrderById(Long id)throws DataAccessException;
  
  public List<PosOrder> savePosOrder(long hotelGroupId,long hotelId,PosMaster posMasterfront,String tableNo,PosPluAll posPluAll);
  public void deletePosOrder(long hotelGroupId,long hotelId,PosMaster posMaster, String tableNo);
  public String updateOrderToDetail(long hotelGroupId,long hotelId,PosMaster posMaster, String tableNo,String info);
  public void updateDealNum(long hotelGroupId,long hotelId,PosMaster posMaster, String tableNo, String type,long id, String dealType);
  public String updateCanclePlu(long hotelGroupId,long hotelId,PosMaster posMaster, String tableNo,String type, long id, String info,BigDecimal number) ;
  public void updateCahngeNum(long hotelGroupId,long hotelId,PosMaster posMaster, String tableNo,String type, long id, String num);
  public void updateCahngePrice(long hotelGroupId,long hotelId,PosMaster posMaster, String tableNo,String type, long id, String price);
  public void updateCahngeDescript(long hotelGroupId,long hotelId,PosMaster posMaster, String tableNo,String type, long id, String descript); 
  public void updateCahngeDescriptOr(long hotelGroupId,long hotelId,PosMaster posMaster, String tableNo,String type, long id, String descript, String num, String price,String unit); 
  public void updateFreePlu(long hotelGroupId,long hotelId,PosMaster posMaster, String tableNo, String type,long id, String info) ;
  public void updateCancleFreePlu(long hotelGroupId,long hotelId,PosMaster posMaster,String tableNo,String type,long id,String info);
  public void updateDecPlu(long hotelGroupId,long hotelId,PosMaster posMaster,String tableNo,String type,long id,String reason,String amount5,String dsc);
  public void updatePluCook(long hotelGroupId,long hotelId,PosMaster posMaster, String tableNo, String type,long id, String codes, String cook,String remark) ;
  public void updateZhuanSetail(long hotelGroupId,long hotelId,PosMaster posMaster, String tableNo,String type, long id, String num, String zaccnt, String ztable);
  
  /**
   * 
   * @param hotelGroupId  集团ID
   * @param hotelId  酒店ID
   * @param coi  标志 0 入账并结账，1入账
   * @param posMaster  主单
   * @param tableNo 桌号
   * @param accnts  账号“，”分割
   * @param taCode 付款码
   * @param pay 金额
   * @param reason 折扣/款待原因
   * @param cardno 卡号
   * @param remark 备注
   */
  public String updateCheckOut(long hotelGroupId,long hotelId,String coi,PosMaster posMaster, String tableNo,String accnts, String taCode, BigDecimal pay, String reason, String reasonDesc,String cardno,String remark,String balance);

  public List<PosOrder> saveCachePosOrder(long hotelGroupId,long hotelId,String accnt, String tableNo,List<PosOrder> list);
  
  public void updateCancleAccount(long hotelGroupId,long hotelId,String id);
  
  
  public List<Object> getStdList(long hotelGroupId,long hotelId,String accnt, String tableNo, String type,long id) ;
  
  public void updateIn(long hotelGroupId,long hotelId,String accnt, String tableNo, String type, String  ids,	long mainId) ;
  public void updateOut(long hotelGroupId,long hotelId,String accnt, String tableNo, String type, String  ids,	long mainId) ;
  
  public  PosBillDto getPosBillDtoByAccnt(long hotelGroupId,long hotelId,String accnt,String tableNo);
  
  public String updateKitchenInputDishcard(final String hotelGroupId,final String hotelId,final String accnt,final String id,final String type,final String station);
  
  public void savePosOrderCopyPlu(long hotelGroupId,long hotelId,PosMaster posMaster,String accnt,String tableno,String type);
}