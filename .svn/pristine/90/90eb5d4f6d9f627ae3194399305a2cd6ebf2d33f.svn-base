package com.greencloud.dao.impl;
import static com.aua.util.StringHelper.isNotNull;

import java.util.List;

import org.springframework.dao.DataAccessException;

import com.aua.dao.impl.BaseDaoImpl;
import com.aua.util.SQLHelper;
import com.greencloud.dao.IPosPluPrinterDao;
import com.greencloud.entity.PosPluPrinter;

   /**
   * operate PosPluPrinter into db
   *@author 
   *@version 1.0
   *@date 2015-11-21 10:55
   */
  public class PosPluPrinterDaoImpl extends BaseDaoImpl implements IPosPluPrinterDao{

  /**
   *save posPluPrinter object  method
   *@param posPluPrinter PosPluPrinter 
   *@throws DataAccessException 
   *@author  
   *@version 1.0
   *@date 2015-11-21 10:55
   */
  public void save(PosPluPrinter posPluPrinter) throws DataAccessException {
       super.save(posPluPrinter);
  }
  
  /**
   *update posPluPrinter method
   *@param posPluPrinter PosPluPrinter
   *@throws DataAccessException 
   *@author 
   *@version 1.0
   *@date 2015-11-21 10:55
   */
  public void update(PosPluPrinter posPluPrinter) throws DataAccessException{
     super.update(posPluPrinter);
  }
  
   /**
   *save or update posPluPrinter object method
   *@param posPluPrinter PosPluPrinter
   *@throws DataAccessException
   *@author  
   *@version 1.0
   *@date 2015-11-21 10:55
   */
  public void saveOrUpdate(PosPluPrinter posPluPrinter) throws DataAccessException{
     super.saveOrUpdate(posPluPrinter);
  }
  
   /**
   *query posPluPrinter collection method
   *@param posPluPrinter PosPluPrinter send query vo 
   *@param firstResult 
   *@param maxResults 
   *@throws DataAccessException 
   *@author 
   *@version 1.0
   *@date 2015-11-21  10:55
   */
  public List<PosPluPrinter> list(PosPluPrinter posPluPrinter,int firstResult ,int maxResults)throws DataAccessException{
  	 SQLHelper sh = new SQLHelper("SELECT obj FROM PosPluPrinter obj WHERE 1=1 ");
  	 spellSQL(sh,posPluPrinter);
  	 sh.appendSql(" ORDER BY obj.id DESC");
  	 sh.setFirstResult(firstResult);
  	 sh.setMaxResults(maxResults);
  	 return find(sh);
  }
  
   /**
   *query collection method  
   *@param posPluPrinter PosPluPrinter send query vo 
   *@throws DataAccessException
   *@author 
   *@version 1.0
   *@date 2015-11-21 10:55
   */
  public List<PosPluPrinter> list(PosPluPrinter posPluPrinter)throws DataAccessException{
  	 SQLHelper sh = new SQLHelper("SELECT obj FROM PosPluPrinter obj WHERE 1=1 ");
  	 spellSQL(sh,posPluPrinter);
  	 sh.appendSql(" ORDER BY obj.id DESC");
  	 return find(sh);
  }
  
  /**
   *count obj amount
   *@param posPluPrinter PosPluPrinter query vo
   *@throws DataAccessException
   *@author 
   *@date 2015-11-21 10:55
   */
  public int count(PosPluPrinter posPluPrinter)throws DataAccessException
  {
    SQLHelper sh = new SQLHelper("SELECT count(obj) FROM PosPluPrinter obj WHERE 1=1 ");
    spellSQL(sh,posPluPrinter);
    return count(sh);
  }
  
   /**
   *query a posPluPrinter by id 
   *@param id 
   *@throws DataAccessException 
   *@author 
   *@date 2015-11-21 10:55
   */
  public PosPluPrinter load(Long id)throws DataAccessException
  {
    return load(PosPluPrinter.class ,id);
  }
  
  /*
   *basic spell SQL method 
   *@param posPluPrinter query vo
   *@throws DataAccessException 
   *@author weihuawon
   *@date 2015-11-21 10:55
   */
  private void spellSQL(SQLHelper sh,PosPluPrinter posPluPrinter)
  {
    if(posPluPrinter != null){
    	if(posPluPrinter.getId()!= null){
            sh.appendSql(" AND obj.id = ? ");
            sh.insertValue(posPluPrinter.getId());
         }
         if(posPluPrinter.getHotelGroupId()!= null){
            sh.appendSql(" AND obj.hotelGroupId = ? ");
            sh.insertValue(posPluPrinter.getHotelGroupId());
         }
         if(posPluPrinter.getHotelId()!= null){
            sh.appendSql(" AND obj.hotelId = ? ");
            sh.insertValue(posPluPrinter.getHotelId());
         }
        if(isNotNull(posPluPrinter.getCode())){
           sh.appendSql(" AND obj.code = ? ");
           sh.insertValue(posPluPrinter.getCode().trim());
        }
        if(isNotNull(posPluPrinter.getSortCode())){
           sh.appendSql(" AND obj.sortCode = ? ");
           sh.insertValue(posPluPrinter.getSortCode().trim());
        }
        if(isNotNull(posPluPrinter.getDescript())){
           sh.appendSql(" AND obj.descript = ? ");
           sh.insertValue(posPluPrinter.getDescript().trim());
        }
        if(isNotNull(posPluPrinter.getDescriptEn())){
           sh.appendSql(" AND obj.descriptEn = ? ");
           sh.insertValue(posPluPrinter.getDescriptEn().trim());
        }
        if(isNotNull(posPluPrinter.getFlag())){
           sh.appendSql(" AND obj.flag = ? ");
           sh.insertValue(posPluPrinter.getFlag().trim());
        }
        if(isNotNull(posPluPrinter.getCreateUser())){
            sh.appendSql(" AND obj.createUser = ? ");
            sh.insertValue(posPluPrinter.getCreateUser().trim());
         }
        if(posPluPrinter.getCreateDatetime()!= null){
            sh.appendSql(" AND obj.createDatetime = ? ");
            sh.insertValue(posPluPrinter.getCreateDatetime());
         }
         if(isNotNull(posPluPrinter.getModifyUser())){
            sh.appendSql(" AND obj.modifyUser = ? ");
            sh.insertValue(posPluPrinter.getModifyUser().trim());
         }
        if(posPluPrinter.getModifyDatetime()!= null){
            sh.appendSql(" AND obj.modifyDatetime = ? ");
            sh.insertValue(posPluPrinter.getModifyDatetime());
         }
    }
  }

@Override
public void syncPosPluPrinter(Long hotelGroupId, Long hotelId)
		throws DataAccessException {
	String sql  = " INSERT INTO  pos_plu_printer (hotel_group_id,hotel_id,sort_code,`code`,descript,descript_en,flag,create_user,create_datetime,modify_user,modify_datetime)   "
			+ "   SELECT hotel_group_id,hotel_id,sort_code,`code`,descript,descript_en,flag,create_user,create_datetime,modify_user,modify_datetime FROM pos_plu_all  WHERE  "
			+ " hotel_group_id = '"+hotelGroupId+"' and hotel_id= '"+hotelId+"' AND `code` NOT IN (SELECT code FROM pos_plu_printer) ";
	SQLHelper sh = new SQLHelper(sql);
	bulkUpdateByNativeSQL(sh);
	sql = " UPDATE pos_plu_printer a ,pos_plu_all b  SET a.descript=b.descript ,a.descript_en=b.descript_en ,a.sort_code = b.sort_code  WHERE a.hotel_group_id = b.hotel_group_id AND a.hotel_id = b.hotel_id AND a.sort_code = b.sort_code AND a.code = b.code ";
	sh.clear();
	sh.appendSql(sql);
	bulkUpdateByNativeSQL(sh);
}

}